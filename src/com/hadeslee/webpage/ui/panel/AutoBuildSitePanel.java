/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AutoBuildSitePanel.java
 *
 * Created on 2011-2-12, 10:54:45
 */
package com.hadeslee.webpage.ui.panel;

import com.hadeslee.webpage.searcher.Article;
import com.hadeslee.webpage.searcher.KeyWordSearchListener;
import com.hadeslee.webpage.searcher.KeyWordSearcher;
import com.hadeslee.webpage.searcher.recurring.InputKeyWordListProvider;
import com.hadeslee.webpage.searcher.recurring.RecurringSearcher;
import com.hadeslee.webpage.searcher.recurring.SearchContent;
import com.hadeslee.webpage.template.KeywordContentTemplate;
import com.hadeslee.webpage.template.KeywordListTemplate;
import com.hadeslee.webpage.util.MyBundle;
import com.hadeslee.webpage.util.Setting;
import com.hadeslee.webpage.util.Util;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author hadeslee
 */
public class AutoBuildSitePanel extends javax.swing.JPanel implements KeyWordSearchListener,
        RecurringSearchListener {

    private JFileChooser jfc;//文件选择器
    private WorkPanel workPanel;
    private SearchContent root;
    private Setting setting;
    private List<String> keywords;
    private File rootFile = new File(".");
    private static final Logger logger = Logger.getLogger(AutoBuildSitePanel.class.getName());

    /** Creates new form AutoBuildSitePanel */
    public AutoBuildSitePanel() {
        initComponents();
        this.setting = Setting.getInstance();
        root = new SearchContent(setting);
        keywords = new ArrayList<String>();
        jProgressBar4.setVisible(false);
        Util.addClipboardListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel33 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jProgressBar4 = new javax.swing.JProgressBar();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jLabel33.setForeground(new java.awt.Color(255, 0, 0));
        jLabel33.setText("注：此功能需要在选定的建站目录下存在list.htm,content.htm,index.htm这些页面，此功能完成后，会在选定目录下生成web文件夹。");

        jLabel3.setText("请输入关键字：");

        jButton16.setText("开始建站");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jTextArea5.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea5.setColumns(20);
        jTextArea5.setEditable(false);
        jTextArea5.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea5.setRows(5);
        jTextArea5.setText("正在搜索中...");
        jScrollPane16.setViewportView(jTextArea5);

        jProgressBar4.setIndeterminate(true);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("自动搜索关键字");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("手动输入关键字(用逗号分隔)");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("建站目录：");

        jTextField1.setEditable(false);

        jButton1.setText("浏览...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
                                .addComponent(jProgressBar4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE))
                            .addGap(24, 24, 24))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1)
                                .addComponent(jButton16))
                            .addContainerGap()))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel33)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        doAutoBuild();
}//GEN-LAST:event_jButton16ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        jTextField2.setText("");
        jLabel3.setText(MyBundle.getString("keyword.to.search"));
}//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        jTextField2.setText("");
        jLabel3.setText(MyBundle.getString("keyword.to.page"));
}//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        File file = getOpenSelectedFile();
        if (file != null) {
            jTextField1.setText(file.getAbsolutePath());
            rootFile = file;
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * 获得文件选择器
     * @param desc 说明
     * @param exts 扩展名
     * @return 文件选择器
     */
    private JFileChooser getJFileChooser() {
        if (jfc == null) {
            jfc = new JFileChooser(".");
        }
        jfc.resetChoosableFileFilters();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        return jfc;
    }

    /**
     * 得到选中的文件，如果没有选中文件，则返回null
     * @param desc 说明
     * @param exts 扩展名
     * @return 选中的文件
     */
    public File getOpenSelectedFile() {
        JFileChooser temp = getJFileChooser();
        int i = temp.showOpenDialog(this);
        if (i == JFileChooser.APPROVE_OPTION) {
            return temp.getSelectedFile();
        }
        return null;
    }

    private void doSearchKeyWord() {
        final String content = jTextField2.getText();
        if (Util.isEmpty(content)) {
            JOptionPane.showMessageDialog(null, MyBundle.getString("keyword.to.search.can.not.empty"));
        } else {
            jProgressBar4.setVisible(true);
            List<String> list = Util.searchKeyWords(content);
            if (setting.getSortType() != Setting.MO_REN) {
                Collections.sort(list, setting.getSorter());
            }
            int count = 0;
            keywords.clear();
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < list.size(); i++) {
                String temp = list.get(i);
                keywords.add(temp);
                sb.append(temp).append("|");
                count++;
                if (count >= setting.getKeywordCount()) {
                    break;
                }
            }
            if (sb.length() > 0) {
                sb.deleteCharAt(sb.length() - 1);
            }
        }
    }

    private void doInputKeyWord() {
        String text = jTextField2.getText();
        if (Util.isEmpty(text)) {
            JOptionPane.showMessageDialog(this, MyBundle.getString("keyword.input.can.not.empty"));
        } else {
            String[] ss = text.split("\\||,|，|｜");
            StringBuilder sb = new StringBuilder();
            keywords.clear();
            for (String s : ss) {
                keywords.add(s);
                sb.append(s).append("|");
            }
            if (sb.length() > 0) {
                sb.deleteCharAt(sb.length() - 1);
            }
        }
    }

    private void doAutoBuild() {
        //先检查当前目录下是否有list.htm和content.htm
        final File listFile = new File(rootFile, "list.htm");
        final File contentFile = new File(rootFile, "content.htm");
        final File indexFile = new File(rootFile,"index.htm");
        if (listFile.exists() && contentFile.exists() && indexFile.exists()) {
            new Thread() {

                @Override
                public void run() {
                    //以下是检查
                    if (jRadioButton2.isSelected()) {
                        doSearchKeyWord();
                    } else {
                        doInputKeyWord();
                    }
                    //填充好两个模版页面
                    String listPage = Util.readFile(listFile, setting.getReadEncoding());
                    root.setKeywordListTemplate(new KeywordListTemplate(listPage));
                    String contentPage = Util.readFile(contentFile, setting.getReadEncoding());
                    root.setKeywordContentTemplate(new KeywordContentTemplate(contentPage));
                    File mainFile = new File(rootFile, "/web/index.htm");
                    mainFile.getParentFile().mkdirs();
                    if (!mainFile.exists()) {
                        try {
                            mainFile.createNewFile();
                        } catch (IOException ex) {
                            Logger.getLogger(AutoBuildSitePanel.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    Util.saveFile(listPage, setting.getWriteEncoding(), mainFile);
                    root.setMainFile(mainFile);
                    //以下是真正开始
                    doRecurring0();
                    jProgressBar4.setVisible(false);
                }
            }.start();
        } else {
            JOptionPane.showMessageDialog(this, "程序的安装目录下必须要同时有list.htm,content.htm,index.htm这三个文件！");
        }

    }

    private void doRecurring0() {
        //以下是真正逻辑
        jButton16.setEnabled(false);
        logger.info("关键字数量:" + setting.getKeywordCount());
        logger.info("关键字页面数量:" + setting.getKeywordPageCount());
        int count = setting.getAutoBuildRepeatCount();
        List<SearchContent> searchContentList = new ArrayList<SearchContent>();
        searchContentList.add(root);
        root.setKeywordListProvider(new InputKeyWordListProvider(keywords));
        int i = 0;
        while (i < count) {
            searchContentList = doRecurring(searchContentList);
            appendInfo("第" + (i + 1) + "轮搜索完毕！");
            i++;
        }
        JOptionPane.showMessageDialog(this, "循环搜索生成完毕！");
        jButton16.setEnabled(true);
    }

    public void appendInfo(String info) {
        jTextArea5.append(info + "\n");
        jTextArea5.setCaretPosition(jTextArea5.getText().length());
    }

    private List<SearchContent> doRecurring(List<SearchContent> list) {
        List<SearchContent> searchContentList = new ArrayList<SearchContent>();
        for (SearchContent sc : list) {
            RecurringSearcher searcher = new RecurringSearcher(sc, setting, this);
            searcher.start();
            waitForSearching(searcher);
            searchContentList.addAll(searcher.getNextContents());
        }
        return searchContentList;
    }

    private void waitForSearching(RecurringSearcher searcher) {
        while (!searcher.isFinished()) {
            try {
                Thread.sleep(100L);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton16;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JProgressBar jProgressBar4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    public void keywordStartSearch(String keyword) {
        appendInfo(MyBundle.format("searching.keyword.of", keyword));
    }

    public void articleSearched(String keyword, Article article) {
        appendInfo(MyBundle.format("searched.article.for.keyword", keyword, article.getTitle()));
    }

    public synchronized void searchDone(KeyWordSearcher keyWordSearcher) {
        appendInfo(MyBundle.format("keyword.searched.done", keyWordSearcher.getKeyword()));
    }

    public void allSearched() {
        //nothing
    }
}
